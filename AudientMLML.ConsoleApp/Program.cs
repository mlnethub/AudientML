// This file was auto-generated by ML.NET Model Builder. 

using System;
using AudientMLML.Model;

namespace AudientMLML.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = new ModelInput()
            {
                Mfcc0 = -1.13947F,
                Mfcc1 = 0.1751689F,
                Mfcc2 = -1.553815F,
                Mfcc3 = 0.4114334F,
                Mfcc4 = -0.5798758F,
                Mfcc5 = 0.3658361F,
                Mfcc6 = -0.8737631F,
                Mfcc7 = 0.3109942F,
                Mfcc8 = -0.6114717F,
                Mfcc9 = 0.2252227F,
                Mfcc10 = -0.3627014F,
                Mfcc11 = 0.2162531F,
                Mfcc12 = -0.1945221F,
                Mfcc13 = 0.1906411F,
                Mfcc14 = -0.05859242F,
                Mfcc15 = 0.03778343F,
                Mfcc16 = -0.2119071F,
                Mfcc17 = 0.09087317F,
                Mfcc18 = -0.1624609F,
                Mfcc19 = 0.05054414F,
                Mfcc20 = -0.08509372F,
                Mfcc21 = 0.008931654F,
                Mfcc22 = -0.1205289F,
                Mfcc23 = 0.08522095F,
                Energy = 0.01979195F,
                Rms = 0.1262801F,
                Zcr = 0.08306938F,
                Entropy = 0.9062997F,
                Centroid = 1544.912F,
                Spread = 1601.74F,
                Flatness = 0.3005298F,
                Noiseness = 0.1732582F,
                Roloff = 3328.125F,
                Crest = 129.8652F,
                Decrease = 0.03305458F,
                Spectral_entropy = 0.8297714F,
            };

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Genre with predicted Genre from sample data...\n\n");
            Console.WriteLine($"mfcc0: {sampleData.Mfcc0}");
            Console.WriteLine($"mfcc1: {sampleData.Mfcc1}");
            Console.WriteLine($"mfcc2: {sampleData.Mfcc2}");
            Console.WriteLine($"mfcc3: {sampleData.Mfcc3}");
            Console.WriteLine($"mfcc4: {sampleData.Mfcc4}");
            Console.WriteLine($"mfcc5: {sampleData.Mfcc5}");
            Console.WriteLine($"mfcc6: {sampleData.Mfcc6}");
            Console.WriteLine($"mfcc7: {sampleData.Mfcc7}");
            Console.WriteLine($"mfcc8: {sampleData.Mfcc8}");
            Console.WriteLine($"mfcc9: {sampleData.Mfcc9}");
            Console.WriteLine($"mfcc10: {sampleData.Mfcc10}");
            Console.WriteLine($"mfcc11: {sampleData.Mfcc11}");
            Console.WriteLine($"mfcc12: {sampleData.Mfcc12}");
            Console.WriteLine($"mfcc13: {sampleData.Mfcc13}");
            Console.WriteLine($"mfcc14: {sampleData.Mfcc14}");
            Console.WriteLine($"mfcc15: {sampleData.Mfcc15}");
            Console.WriteLine($"mfcc16: {sampleData.Mfcc16}");
            Console.WriteLine($"mfcc17: {sampleData.Mfcc17}");
            Console.WriteLine($"mfcc18: {sampleData.Mfcc18}");
            Console.WriteLine($"mfcc19: {sampleData.Mfcc19}");
            Console.WriteLine($"mfcc20: {sampleData.Mfcc20}");
            Console.WriteLine($"mfcc21: {sampleData.Mfcc21}");
            Console.WriteLine($"mfcc22: {sampleData.Mfcc22}");
            Console.WriteLine($"mfcc23: {sampleData.Mfcc23}");
            Console.WriteLine($"energy: {sampleData.Energy}");
            Console.WriteLine($"rms: {sampleData.Rms}");
            Console.WriteLine($"zcr: {sampleData.Zcr}");
            Console.WriteLine($"entropy: {sampleData.Entropy}");
            Console.WriteLine($"centroid: {sampleData.Centroid}");
            Console.WriteLine($"spread: {sampleData.Spread}");
            Console.WriteLine($"flatness: {sampleData.Flatness}");
            Console.WriteLine($"noiseness: {sampleData.Noiseness}");
            Console.WriteLine($"roloff: {sampleData.Roloff}");
            Console.WriteLine($"crest: {sampleData.Crest}");
            Console.WriteLine($"decrease: {sampleData.Decrease}");
            Console.WriteLine($"spectral_entropy: {sampleData.Spectral_entropy}");
            Console.WriteLine($"\n\nPredicted Genre value {predictionResult.Prediction} \nPredicted Genre scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
